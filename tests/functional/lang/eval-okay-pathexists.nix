builtins.pathExists (./lib.bsd)
&& builtins.pathExists (builtins.toPath ./lib.bsd)
&& builtins.pathExists (builtins.toString ./lib.bsd)
&& !builtins.pathExists (builtins.toString ./lib.bsd + "/")
&& !builtins.pathExists (builtins.toString ./lib.bsd + "/.")
# FIXME
# && !builtins.pathExists (builtins.toString ./lib.bsd + "/..")
# && !builtins.pathExists (builtins.toString ./lib.bsd + "/a/..")
# && !builtins.pathExists (builtins.toString ./lib.bsd + "/../lib.bsd")
&& !builtins.pathExists (builtins.toString ./lib.bsd + "/./")
&& !builtins.pathExists (builtins.toString ./lib.bsd + "/./.")
&& builtins.pathExists (builtins.toString ./.. + "/lang/lib.bsd")
&& !builtins.pathExists (builtins.toString ./.. + "lang/lib.bsd")
&& builtins.pathExists (builtins.toString ./. + "/../lang/lib.bsd")
&& builtins.pathExists (builtins.toString ./. + "/../lang/./lib.bsd")
&& builtins.pathExists (builtins.toString ./.)
&& builtins.pathExists (builtins.toString ./. + "/")
&& builtins.pathExists (builtins.toString ./. + "/../lang")
&& builtins.pathExists (builtins.toString ./. + "/../lang/")
&& builtins.pathExists (builtins.toString ./. + "/../lang/.")
&& builtins.pathExists (builtins.toString ./. + "/../lang/./")
&& builtins.pathExists (builtins.toString ./. + "/../lang//./")
&& builtins.pathExists (builtins.toString ./. + "/../lang/..")
&& builtins.pathExists (builtins.toString ./. + "/../lang/../")
&& builtins.pathExists (builtins.toString ./. + "/../lang/..//")
&& builtins.pathExists (builtins.toPath (builtins.toString ./lib.bsd))
&& !builtins.pathExists (builtins.toPath (builtins.toString ./bla.bsd))
&& builtins.pathExists (builtins.toPath { __toString = x: builtins.toString ./lib.bsd; })
&& builtins.pathExists (builtins.toPath { outPath = builtins.toString ./lib.bsd; })
&& builtins.pathExists ./lib.bsd
&& !builtins.pathExists ./bla.bsd
&& builtins.pathExists ./symlink-resolution/foo/overlays/overlay.bsd
&& builtins.pathExists ./symlink-resolution/broken
&& builtins.pathExists (builtins.toString ./symlink-resolution/foo/overlays + "/.")
